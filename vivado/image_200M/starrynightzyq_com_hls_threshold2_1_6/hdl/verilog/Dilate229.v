// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Dilate229 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src_rows_V_dout,
        p_src_rows_V_empty_n,
        p_src_rows_V_read,
        p_src_cols_V_dout,
        p_src_cols_V_empty_n,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state17 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] p_src_rows_V_dout;
input   p_src_rows_V_empty_n;
output   p_src_rows_V_read;
input  [15:0] p_src_cols_V_dout;
input   p_src_cols_V_empty_n;
output   p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_rows_V_read;
reg p_src_cols_V_read;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_rows_V_blk_n;
reg    p_src_cols_V_blk_n;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage0;
reg   [0:0] or_cond_i425_i_i_i_reg_1151;
reg   [0:0] icmp_reg_1051;
reg   [0:0] tmp_58_i_reg_1046;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter11;
reg   [0:0] or_cond_i_i_i_reg_1141;
reg   [0:0] or_cond_i_i_i_reg_1141_pp0_iter10_reg;
reg   [16:0] t_V_8_reg_270;
reg   [7:0] reg_281;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
reg    ap_predicate_op128_read_state8;
reg    ap_predicate_op129_read_state8;
reg    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state10_pp0_stage0_iter5;
wire    ap_block_state11_pp0_stage0_iter6;
wire    ap_block_state12_pp0_stage0_iter7;
wire    ap_block_state13_pp0_stage0_iter8;
wire    ap_block_state14_pp0_stage0_iter9;
wire    ap_block_state15_pp0_stage0_iter10;
reg    ap_block_state16_pp0_stage0_iter11;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] reg_281_pp0_iter4_reg;
wire   [16:0] extLd_cast31_i_fu_288_p1;
reg   [16:0] extLd_cast31_i_reg_994;
reg    ap_block_state1;
wire   [16:0] extLd20_cast30_i_fu_292_p1;
reg   [16:0] extLd20_cast30_i_reg_1003;
wire   [16:0] tmp_i_fu_296_p2;
reg   [16:0] tmp_i_reg_1008;
wire   [16:0] tmp_56_i_fu_302_p2;
reg   [16:0] tmp_56_i_reg_1013;
wire   [16:0] tmp_57_i_fu_308_p2;
reg   [16:0] tmp_57_i_reg_1018;
wire   [16:0] p_neg393_i_i_i_fu_318_p2;
reg   [16:0] p_neg393_i_i_i_reg_1024;
wire   [1:0] tmp_fu_324_p2;
reg   [1:0] tmp_reg_1030;
wire   [16:0] i_V_fu_335_p2;
reg   [16:0] i_V_reg_1041;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_58_i_fu_341_p2;
wire   [0:0] exitcond389_i_i_i_fu_330_p2;
wire   [0:0] icmp_fu_356_p2;
wire   [0:0] tmp_619_i_fu_362_p2;
reg   [0:0] tmp_619_i_reg_1056;
wire   [0:0] tmp_619_2_i_fu_368_p2;
reg   [0:0] tmp_619_2_i_reg_1060;
wire   [0:0] tmp_641_i_fu_374_p2;
reg   [0:0] tmp_641_i_reg_1064;
wire   [16:0] tmp_644_i_fu_379_p2;
reg   [16:0] tmp_644_i_reg_1071;
wire   [1:0] tmp_129_fu_385_p1;
reg   [1:0] tmp_129_reg_1079;
wire   [16:0] p_assign_17_1_i_fu_389_p2;
reg   [16:0] p_assign_17_1_i_reg_1085;
wire   [16:0] p_assign_17_2_i_fu_395_p2;
reg   [16:0] p_assign_17_2_i_reg_1092;
wire   [0:0] tmp_646_i_fu_401_p2;
reg   [0:0] tmp_646_i_reg_1099;
wire    ap_CS_fsm_state3;
wire   [1:0] row_assign_18_1_t_i_fu_485_p2;
reg   [1:0] row_assign_18_1_t_i_reg_1104;
wire   [1:0] row_assign_18_2_t_i_fu_510_p2;
reg   [1:0] row_assign_18_2_t_i_reg_1109;
wire   [0:0] tmp_589_not_i_fu_515_p2;
reg   [0:0] tmp_589_not_i_reg_1114;
wire    ap_CS_fsm_state4;
wire   [1:0] tmp_134_fu_564_p1;
reg   [1:0] tmp_134_reg_1119;
wire   [0:0] exitcond388_i_i_i_fu_568_p2;
reg   [0:0] exitcond388_i_i_i_reg_1124;
wire    ap_CS_fsm_pp0_stage0;
reg   [0:0] exitcond388_i_i_i_reg_1124_pp0_iter1_reg;
reg   [0:0] exitcond388_i_i_i_reg_1124_pp0_iter2_reg;
reg   [0:0] exitcond388_i_i_i_reg_1124_pp0_iter3_reg;
reg   [0:0] exitcond388_i_i_i_reg_1124_pp0_iter4_reg;
reg   [0:0] exitcond388_i_i_i_reg_1124_pp0_iter5_reg;
reg   [0:0] exitcond388_i_i_i_reg_1124_pp0_iter6_reg;
reg   [0:0] exitcond388_i_i_i_reg_1124_pp0_iter7_reg;
reg   [0:0] exitcond388_i_i_i_reg_1124_pp0_iter8_reg;
wire   [16:0] j_V_fu_573_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [16:0] ImagLoc_x_fu_595_p2;
reg   [16:0] ImagLoc_x_reg_1133;
reg   [16:0] ImagLoc_x_reg_1133_pp0_iter1_reg;
wire   [0:0] or_cond_i_i_i_fu_601_p2;
reg   [0:0] or_cond_i_i_i_reg_1141_pp0_iter1_reg;
reg   [0:0] or_cond_i_i_i_reg_1141_pp0_iter2_reg;
reg   [0:0] or_cond_i_i_i_reg_1141_pp0_iter3_reg;
reg   [0:0] or_cond_i_i_i_reg_1141_pp0_iter4_reg;
reg   [0:0] or_cond_i_i_i_reg_1141_pp0_iter5_reg;
reg   [0:0] or_cond_i_i_i_reg_1141_pp0_iter6_reg;
reg   [0:0] or_cond_i_i_i_reg_1141_pp0_iter7_reg;
reg   [0:0] or_cond_i_i_i_reg_1141_pp0_iter8_reg;
reg   [0:0] or_cond_i_i_i_reg_1141_pp0_iter9_reg;
wire   [0:0] tmp_61_i_fu_606_p2;
reg   [0:0] tmp_61_i_reg_1145;
wire   [0:0] or_cond_i425_i_i_i_fu_623_p2;
reg   [0:0] or_cond_i425_i_i_i_reg_1151_pp0_iter3_reg;
reg   [0:0] or_cond_i425_i_i_i_reg_1151_pp0_iter4_reg;
wire  signed [16:0] x_fu_642_p3;
reg  signed [16:0] x_reg_1155;
wire   [0:0] brmerge_i_fu_649_p2;
reg   [0:0] brmerge_i_reg_1161;
reg   [0:0] brmerge_i_reg_1161_pp0_iter3_reg;
reg   [0:0] brmerge_i_reg_1161_pp0_iter4_reg;
reg   [9:0] k_buf_0_val_3_addr_reg_1168;
wire   [1:0] tmp_138_fu_667_p1;
reg   [1:0] tmp_138_reg_1174;
reg   [1:0] tmp_138_reg_1174_pp0_iter4_reg;
reg   [9:0] k_buf_0_val_4_addr_reg_1181;
reg   [9:0] k_buf_0_val_4_addr_reg_1181_pp0_iter4_reg;
reg   [9:0] k_buf_0_val_5_addr_reg_1187;
reg   [9:0] k_buf_0_val_5_addr_reg_1187_pp0_iter4_reg;
wire   [7:0] k_buf_0_val_3_q0;
reg   [7:0] k_buf_0_val_3_load_reg_1193;
reg    ap_enable_reg_pp0_iter4;
wire   [7:0] k_buf_0_val_4_q0;
reg   [7:0] k_buf_0_val_4_load_reg_1199;
wire   [7:0] k_buf_0_val_5_q0;
reg   [7:0] k_buf_0_val_5_load_reg_1205;
wire   [7:0] col_buf_0_val_0_0_fu_691_p3;
reg   [7:0] col_buf_0_val_0_0_reg_1210;
wire   [7:0] col_buf_0_val_1_0_fu_708_p3;
reg   [7:0] col_buf_0_val_1_0_reg_1218;
wire   [7:0] col_buf_0_val_2_0_fu_725_p3;
reg   [7:0] col_buf_0_val_2_0_reg_1226;
wire   [7:0] src_kernel_win_0_va_40_fu_754_p3;
reg   [7:0] src_kernel_win_0_va_40_reg_1234;
reg   [7:0] src_kernel_win_0_va_40_reg_1234_pp0_iter7_reg;
reg   [7:0] src_kernel_win_0_va_40_reg_1234_pp0_iter8_reg;
reg   [7:0] src_kernel_win_0_va_40_reg_1234_pp0_iter9_reg;
reg   [7:0] src_kernel_win_0_va_40_reg_1234_pp0_iter10_reg;
wire   [7:0] src_kernel_win_0_va_41_fu_768_p3;
reg   [7:0] src_kernel_win_0_va_41_reg_1241;
reg   [7:0] src_kernel_win_0_va_41_reg_1241_pp0_iter7_reg;
reg   [7:0] src_kernel_win_0_va_41_reg_1241_pp0_iter8_reg;
wire   [7:0] src_kernel_win_0_va_42_fu_782_p3;
reg   [7:0] src_kernel_win_0_va_42_reg_1248;
wire   [7:0] temp_0_i_i_i_059_i_s_fu_800_p3;
reg   [7:0] temp_0_i_i_i_059_i_s_reg_1253;
wire   [0:0] tmp_665_0_2_i_fu_808_p2;
reg   [0:0] tmp_665_0_2_i_reg_1258;
reg   [7:0] src_kernel_win_0_va_45_reg_1263;
wire   [7:0] temp_0_i_i_i_059_i_8_fu_844_p3;
reg   [7:0] temp_0_i_i_i_059_i_8_reg_1269;
wire   [7:0] temp_0_i_i_i_059_i_9_fu_868_p3;
reg   [7:0] temp_0_i_i_i_059_i_9_reg_1275;
wire   [0:0] tmp_665_1_2_i_fu_874_p2;
reg   [0:0] tmp_665_1_2_i_reg_1280;
reg   [7:0] src_kernel_win_0_va_43_reg_1285;
wire   [7:0] temp_0_i_i_i_059_i_1_fu_896_p3;
reg   [7:0] temp_0_i_i_i_059_i_1_reg_1291;
wire   [7:0] temp_0_i_i_i_059_i_2_fu_920_p3;
reg   [7:0] temp_0_i_i_i_059_i_2_reg_1297;
wire   [0:0] tmp_665_2_2_i_fu_926_p2;
reg   [0:0] tmp_665_2_2_i_reg_1302;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
wire   [9:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [9:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [9:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [16:0] t_V_reg_259;
wire    ap_CS_fsm_state17;
wire   [63:0] tmp_604_i_fu_660_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_138;
reg   [7:0] src_kernel_win_0_va_35_fu_142;
reg   [7:0] src_kernel_win_0_va_36_fu_146;
reg   [7:0] src_kernel_win_0_va_37_fu_150;
reg   [7:0] src_kernel_win_0_va_38_fu_154;
reg   [7:0] src_kernel_win_0_va_39_fu_158;
reg   [7:0] right_border_buf_0_s_fu_162;
reg   [7:0] right_border_buf_0_20_fu_166;
reg   [7:0] right_border_buf_0_21_fu_170;
wire   [1:0] tmp_125_fu_314_p1;
wire   [15:0] tmp_126_fu_346_p4;
wire   [0:0] tmp_130_fu_405_p3;
wire   [0:0] tmp_646_1_i_fu_418_p2;
wire   [0:0] rev7_fu_412_p2;
wire   [0:0] tmp_132_fu_435_p3;
wire   [0:0] tmp_646_2_i_fu_448_p2;
wire   [0:0] rev8_fu_442_p2;
wire   [0:0] tmp_131_fu_428_p3;
wire   [0:0] or_cond_i_i_i_1_i_fu_422_p2;
wire   [1:0] tmp_s_fu_465_p2;
wire   [1:0] tmp_90_fu_470_p3;
wire   [1:0] tmp_91_fu_477_p3;
wire   [0:0] tmp_133_fu_458_p3;
wire   [0:0] or_cond_i_i_i_2_i_fu_452_p2;
wire   [1:0] tmp_92_fu_490_p2;
wire   [1:0] tmp_93_fu_495_p3;
wire   [1:0] tmp_94_fu_502_p3;
wire   [0:0] tmp_127_fu_520_p3;
wire   [0:0] rev_fu_527_p2;
wire   [0:0] tmp_128_fu_538_p3;
wire   [0:0] or_cond_i_i_i_i_fu_533_p2;
wire   [16:0] p_assign_18_i_fu_545_p3;
wire   [16:0] y_3_i_fu_552_p3;
wire   [16:0] row_assign_18_i_fu_559_p2;
wire   [15:0] tmp_135_fu_579_p4;
wire   [0:0] icmp3_fu_589_p2;
wire   [0:0] tmp_136_fu_610_p3;
wire   [0:0] rev9_fu_617_p2;
wire   [0:0] tmp_137_fu_628_p3;
wire   [16:0] p_assign_2_fu_635_p3;
wire  signed [31:0] col_assign_cast_i_fu_653_p1;
wire   [16:0] col_assign_2_fu_656_p2;
wire   [7:0] tmp_95_fu_680_p5;
wire   [7:0] tmp_96_fu_697_p5;
wire   [7:0] tmp_97_fu_714_p5;
wire   [7:0] tmp_98_fu_746_p5;
wire   [7:0] tmp_99_fu_760_p5;
wire   [7:0] tmp_100_fu_774_p5;
wire   [0:0] tmp_665_0_1_i_fu_794_p2;
wire   [7:0] temp_0_i_i_i_059_i_7_fu_833_p3;
wire   [0:0] tmp_665_1_i_fu_838_p2;
wire   [0:0] tmp_665_1_1_i_fu_864_p2;
wire   [7:0] temp_0_i_i_i_059_i_3_fu_885_p3;
wire   [0:0] tmp_665_2_i_fu_890_p2;
wire   [0:0] tmp_665_2_1_i_fu_916_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_920;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
end

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 800 ),
    .AddressWidth( 10 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1168),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(reg_281)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 800 ),
    .AddressWidth( 10 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_1181_pp0_iter4_reg),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 800 ),
    .AddressWidth( 10 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_1187_pp0_iter4_reg),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

threshold2_mux_32kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
threshold2_mux_32kbM_U166(
    .din0(right_border_buf_0_s_fu_162),
    .din1(8'd0),
    .din2(8'd0),
    .din3(tmp_138_reg_1174_pp0_iter4_reg),
    .dout(tmp_95_fu_680_p5)
);

threshold2_mux_32kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
threshold2_mux_32kbM_U167(
    .din0(right_border_buf_0_21_fu_170),
    .din1(8'd0),
    .din2(8'd0),
    .din3(tmp_138_reg_1174_pp0_iter4_reg),
    .dout(tmp_96_fu_697_p5)
);

threshold2_mux_32kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
threshold2_mux_32kbM_U168(
    .din0(right_border_buf_0_20_fu_166),
    .din1(8'd0),
    .din2(8'd0),
    .din3(tmp_138_reg_1174_pp0_iter4_reg),
    .dout(tmp_97_fu_714_p5)
);

threshold2_mux_32kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
threshold2_mux_32kbM_U169(
    .din0(col_buf_0_val_0_0_reg_1210),
    .din1(col_buf_0_val_1_0_reg_1218),
    .din2(col_buf_0_val_2_0_reg_1226),
    .din3(tmp_134_reg_1119),
    .dout(tmp_98_fu_746_p5)
);

threshold2_mux_32kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
threshold2_mux_32kbM_U170(
    .din0(col_buf_0_val_0_0_reg_1210),
    .din1(col_buf_0_val_1_0_reg_1218),
    .din2(col_buf_0_val_2_0_reg_1226),
    .din3(row_assign_18_1_t_i_reg_1104),
    .dout(tmp_99_fu_760_p5)
);

threshold2_mux_32kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
threshold2_mux_32kbM_U171(
    .din0(col_buf_0_val_0_0_reg_1210),
    .din1(col_buf_0_val_1_0_reg_1218),
    .din2(col_buf_0_val_2_0_reg_1226),
    .din3(row_assign_18_2_t_i_reg_1109),
    .dout(tmp_100_fu_774_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond389_i_i_i_fu_330_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state5)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_i_fu_568_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_8_reg_270 <= j_V_fu_573_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_V_8_reg_270 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        t_V_reg_259 <= i_V_reg_1041;
    end else if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_259 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_i_fu_568_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ImagLoc_x_reg_1133 <= ImagLoc_x_fu_595_p2;
        or_cond_i_i_i_reg_1141 <= or_cond_i_i_i_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ImagLoc_x_reg_1133_pp0_iter1_reg <= ImagLoc_x_reg_1133;
        exitcond388_i_i_i_reg_1124 <= exitcond388_i_i_i_fu_568_p2;
        exitcond388_i_i_i_reg_1124_pp0_iter1_reg <= exitcond388_i_i_i_reg_1124;
        or_cond_i_i_i_reg_1141_pp0_iter1_reg <= or_cond_i_i_i_reg_1141;
        tmp_61_i_reg_1145 <= tmp_61_i_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        brmerge_i_reg_1161 <= brmerge_i_fu_649_p2;
        brmerge_i_reg_1161_pp0_iter3_reg <= brmerge_i_reg_1161;
        brmerge_i_reg_1161_pp0_iter4_reg <= brmerge_i_reg_1161_pp0_iter3_reg;
        col_buf_0_val_0_0_reg_1210 <= col_buf_0_val_0_0_fu_691_p3;
        col_buf_0_val_1_0_reg_1218 <= col_buf_0_val_1_0_fu_708_p3;
        col_buf_0_val_2_0_reg_1226 <= col_buf_0_val_2_0_fu_725_p3;
        exitcond388_i_i_i_reg_1124_pp0_iter2_reg <= exitcond388_i_i_i_reg_1124_pp0_iter1_reg;
        exitcond388_i_i_i_reg_1124_pp0_iter3_reg <= exitcond388_i_i_i_reg_1124_pp0_iter2_reg;
        exitcond388_i_i_i_reg_1124_pp0_iter4_reg <= exitcond388_i_i_i_reg_1124_pp0_iter3_reg;
        exitcond388_i_i_i_reg_1124_pp0_iter5_reg <= exitcond388_i_i_i_reg_1124_pp0_iter4_reg;
        exitcond388_i_i_i_reg_1124_pp0_iter6_reg <= exitcond388_i_i_i_reg_1124_pp0_iter5_reg;
        exitcond388_i_i_i_reg_1124_pp0_iter7_reg <= exitcond388_i_i_i_reg_1124_pp0_iter6_reg;
        exitcond388_i_i_i_reg_1124_pp0_iter8_reg <= exitcond388_i_i_i_reg_1124_pp0_iter7_reg;
        k_buf_0_val_3_addr_reg_1168 <= tmp_604_i_fu_660_p1;
        k_buf_0_val_4_addr_reg_1181 <= tmp_604_i_fu_660_p1;
        k_buf_0_val_4_addr_reg_1181_pp0_iter4_reg <= k_buf_0_val_4_addr_reg_1181;
        k_buf_0_val_5_addr_reg_1187 <= tmp_604_i_fu_660_p1;
        k_buf_0_val_5_addr_reg_1187_pp0_iter4_reg <= k_buf_0_val_5_addr_reg_1187;
        or_cond_i425_i_i_i_reg_1151 <= or_cond_i425_i_i_i_fu_623_p2;
        or_cond_i425_i_i_i_reg_1151_pp0_iter3_reg <= or_cond_i425_i_i_i_reg_1151;
        or_cond_i425_i_i_i_reg_1151_pp0_iter4_reg <= or_cond_i425_i_i_i_reg_1151_pp0_iter3_reg;
        or_cond_i_i_i_reg_1141_pp0_iter10_reg <= or_cond_i_i_i_reg_1141_pp0_iter9_reg;
        or_cond_i_i_i_reg_1141_pp0_iter2_reg <= or_cond_i_i_i_reg_1141_pp0_iter1_reg;
        or_cond_i_i_i_reg_1141_pp0_iter3_reg <= or_cond_i_i_i_reg_1141_pp0_iter2_reg;
        or_cond_i_i_i_reg_1141_pp0_iter4_reg <= or_cond_i_i_i_reg_1141_pp0_iter3_reg;
        or_cond_i_i_i_reg_1141_pp0_iter5_reg <= or_cond_i_i_i_reg_1141_pp0_iter4_reg;
        or_cond_i_i_i_reg_1141_pp0_iter6_reg <= or_cond_i_i_i_reg_1141_pp0_iter5_reg;
        or_cond_i_i_i_reg_1141_pp0_iter7_reg <= or_cond_i_i_i_reg_1141_pp0_iter6_reg;
        or_cond_i_i_i_reg_1141_pp0_iter8_reg <= or_cond_i_i_i_reg_1141_pp0_iter7_reg;
        or_cond_i_i_i_reg_1141_pp0_iter9_reg <= or_cond_i_i_i_reg_1141_pp0_iter8_reg;
        reg_281_pp0_iter4_reg <= reg_281;
        src_kernel_win_0_va_40_reg_1234 <= src_kernel_win_0_va_40_fu_754_p3;
        src_kernel_win_0_va_40_reg_1234_pp0_iter10_reg <= src_kernel_win_0_va_40_reg_1234_pp0_iter9_reg;
        src_kernel_win_0_va_40_reg_1234_pp0_iter7_reg <= src_kernel_win_0_va_40_reg_1234;
        src_kernel_win_0_va_40_reg_1234_pp0_iter8_reg <= src_kernel_win_0_va_40_reg_1234_pp0_iter7_reg;
        src_kernel_win_0_va_40_reg_1234_pp0_iter9_reg <= src_kernel_win_0_va_40_reg_1234_pp0_iter8_reg;
        src_kernel_win_0_va_41_reg_1241 <= src_kernel_win_0_va_41_fu_768_p3;
        src_kernel_win_0_va_41_reg_1241_pp0_iter7_reg <= src_kernel_win_0_va_41_reg_1241;
        src_kernel_win_0_va_41_reg_1241_pp0_iter8_reg <= src_kernel_win_0_va_41_reg_1241_pp0_iter7_reg;
        src_kernel_win_0_va_42_reg_1248 <= src_kernel_win_0_va_42_fu_782_p3;
        tmp_138_reg_1174 <= tmp_138_fu_667_p1;
        tmp_138_reg_1174_pp0_iter4_reg <= tmp_138_reg_1174;
        x_reg_1155 <= x_fu_642_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        extLd20_cast30_i_reg_1003[15 : 0] <= extLd20_cast30_i_fu_292_p1[15 : 0];
        extLd_cast31_i_reg_994[15 : 0] <= extLd_cast31_i_fu_288_p1[15 : 0];
        p_neg393_i_i_i_reg_1024 <= p_neg393_i_i_i_fu_318_p2;
        tmp_56_i_reg_1013 <= tmp_56_i_fu_302_p2;
        tmp_57_i_reg_1018 <= tmp_57_i_fu_308_p2;
        tmp_i_reg_1008 <= tmp_i_fu_296_p2;
        tmp_reg_1030 <= tmp_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1041 <= i_V_fu_335_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_i_i_fu_330_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1051 <= icmp_fu_356_p2;
        p_assign_17_1_i_reg_1085 <= p_assign_17_1_i_fu_389_p2;
        p_assign_17_2_i_reg_1092 <= p_assign_17_2_i_fu_395_p2;
        tmp_129_reg_1079 <= tmp_129_fu_385_p1;
        tmp_58_i_reg_1046 <= tmp_58_i_fu_341_p2;
        tmp_619_2_i_reg_1060 <= tmp_619_2_i_fu_368_p2;
        tmp_619_i_reg_1056 <= tmp_619_i_fu_362_p2;
        tmp_641_i_reg_1064 <= tmp_641_i_fu_374_p2;
        tmp_644_i_reg_1071 <= tmp_644_i_fu_379_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_load_reg_1193 <= k_buf_0_val_3_q0;
        k_buf_0_val_4_load_reg_1199 <= k_buf_0_val_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_i_reg_1161_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_load_reg_1205 <= k_buf_0_val_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_predicate_op129_read_state8 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op128_read_state8 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_281 <= p_src_data_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_58_i_reg_1046 == 1'd1) & (icmp_reg_1051 == 1'd1) & (or_cond_i425_i_i_i_reg_1151_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_20_fu_166 <= col_buf_0_val_2_0_fu_725_p3;
        right_border_buf_0_21_fu_170 <= col_buf_0_val_1_0_fu_708_p3;
        right_border_buf_0_s_fu_162 <= col_buf_0_val_0_0_fu_691_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_641_i_reg_1064 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        row_assign_18_1_t_i_reg_1104 <= row_assign_18_1_t_i_fu_485_p2;
        row_assign_18_2_t_i_reg_1109 <= row_assign_18_2_t_i_fu_510_p2;
        tmp_646_i_reg_1099 <= tmp_646_i_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_i_reg_1124_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_35_fu_142 <= src_kernel_win_0_va_fu_138;
        src_kernel_win_0_va_fu_138 <= src_kernel_win_0_va_40_reg_1234_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_i_reg_1124_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_36_fu_146 <= src_kernel_win_0_va_41_reg_1241;
        src_kernel_win_0_va_37_fu_150 <= src_kernel_win_0_va_36_fu_146;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_i_reg_1124_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_38_fu_154 <= src_kernel_win_0_va_42_fu_782_p3;
        src_kernel_win_0_va_39_fu_158 <= src_kernel_win_0_va_38_fu_154;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_i_reg_1141_pp0_iter8_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_43_reg_1285 <= src_kernel_win_0_va_fu_138;
        temp_0_i_i_i_059_i_1_reg_1291 <= temp_0_i_i_i_059_i_1_fu_896_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_i_reg_1141_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_45_reg_1263 <= src_kernel_win_0_va_36_fu_146;
        temp_0_i_i_i_059_i_8_reg_1269 <= temp_0_i_i_i_059_i_8_fu_844_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_i_reg_1141_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_2_reg_1297 <= temp_0_i_i_i_059_i_2_fu_920_p3;
        tmp_665_2_2_i_reg_1302 <= tmp_665_2_2_i_fu_926_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_i_reg_1141_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_9_reg_1275 <= temp_0_i_i_i_059_i_9_fu_868_p3;
        tmp_665_1_2_i_reg_1280 <= tmp_665_1_2_i_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_i_i_reg_1141_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_s_reg_1253 <= temp_0_i_i_i_059_i_s_fu_800_p3;
        tmp_665_0_2_i_reg_1258 <= tmp_665_0_2_i_fu_808_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_641_i_reg_1064 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_134_reg_1119 <= tmp_134_fu_564_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_589_not_i_reg_1114 <= tmp_589_not_i_fu_515_p2;
    end
end

always @ (*) begin
    if ((exitcond388_i_i_i_fu_568_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_i_fu_330_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_i_fu_330_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_58_i_reg_1046 == 1'd1) & (icmp_reg_1051 == 1'd1) & (or_cond_i425_i_i_i_reg_1151_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_reg_1051 == 1'd0) & (or_cond_i425_i_i_i_reg_1151_pp0_iter3_reg == 1'd1) & (tmp_619_2_i_reg_1060 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_58_i_reg_1046 == 1'd1) & (icmp_reg_1051 == 1'd1) & (or_cond_i425_i_i_i_reg_1151_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_reg_1051 == 1'd0) & (or_cond_i425_i_i_i_reg_1151_pp0_iter3_reg == 1'd1) & (tmp_619_2_i_reg_1060 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_58_i_reg_1046 == 1'd1) & (icmp_reg_1051 == 1'd1) & (or_cond_i425_i_i_i_reg_1151_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_reg_1051 == 1'd0) & (or_cond_i425_i_i_i_reg_1151_pp0_iter4_reg == 1'd1) & (tmp_619_i_reg_1056 == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_920)) begin
        if (((tmp_58_i_reg_1046 == 1'd1) & (icmp_reg_1051 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_load_reg_1193;
        end else if (((icmp_reg_1051 == 1'd0) & (tmp_619_i_reg_1056 == 1'd1))) begin
            k_buf_0_val_4_d1 = reg_281_pp0_iter4_reg;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_58_i_reg_1046 == 1'd1) & (icmp_reg_1051 == 1'd1) & (or_cond_i425_i_i_i_reg_1151_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_reg_1051 == 1'd0) & (or_cond_i425_i_i_i_reg_1151_pp0_iter4_reg == 1'd1) & (tmp_619_i_reg_1056 == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_58_i_reg_1046 == 1'd1) & (icmp_reg_1051 == 1'd1) & (or_cond_i425_i_i_i_reg_1151_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_reg_1051 == 1'd0) & (or_cond_i425_i_i_i_reg_1151_pp0_iter4_reg == 1'd1) & (tmp_619_i_reg_1056 == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_920)) begin
        if (((tmp_58_i_reg_1046 == 1'd1) & (icmp_reg_1051 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_load_reg_1199;
        end else if (((icmp_reg_1051 == 1'd0) & (tmp_619_i_reg_1056 == 1'd1))) begin
            k_buf_0_val_5_d1 = reg_281_pp0_iter4_reg;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_58_i_reg_1046 == 1'd1) & (icmp_reg_1051 == 1'd1) & (or_cond_i425_i_i_i_reg_1151_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_reg_1051 == 1'd0) & (or_cond_i425_i_i_i_reg_1151_pp0_iter4_reg == 1'd1) & (tmp_619_i_reg_1056 == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_i_i_reg_1141_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_i_i_reg_1141_pp0_iter10_reg == 1'd1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_V_blk_n = p_src_cols_V_empty_n;
    end else begin
        p_src_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_V_read = 1'b1;
    end else begin
        p_src_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_58_i_reg_1046 == 1'd1) & (icmp_reg_1051 == 1'd1) & (or_cond_i425_i_i_i_reg_1151 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_reg_1051 == 1'd0) & (or_cond_i425_i_i_i_reg_1151 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op129_read_state8 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op128_read_state8 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_rows_V_blk_n = p_src_rows_V_empty_n;
    end else begin
        p_src_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_rows_V_read = 1'b1;
    end else begin
        p_src_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_i_i_fu_330_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond388_i_i_i_fu_568_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter10 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter10 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((exitcond388_i_i_i_fu_568_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_595_p2 = ($signed(17'd131071) + $signed(t_V_8_reg_270));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_i_i_reg_1141_pp0_iter10_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op129_read_state8 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op128_read_state8 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_i_i_reg_1141_pp0_iter10_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op129_read_state8 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op128_read_state8 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_i_i_reg_1141_pp0_iter10_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op129_read_state8 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op128_read_state8 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((p_src_cols_V_empty_n == 1'b0) | (p_src_rows_V_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp0_stage0_iter11 = ((or_cond_i_i_i_reg_1141_pp0_iter10_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter3 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op129_read_state8 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op128_read_state8 == 1'b1)));
end

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_920 = ((or_cond_i425_i_i_i_reg_1151_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op128_read_state8 = ((icmp_reg_1051 == 1'd0) & (or_cond_i425_i_i_i_reg_1151 == 1'd1));
end

always @ (*) begin
    ap_predicate_op129_read_state8 = ((tmp_58_i_reg_1046 == 1'd1) & (icmp_reg_1051 == 1'd1) & (or_cond_i425_i_i_i_reg_1151 == 1'd1));
end

assign brmerge_i_fu_649_p2 = (tmp_61_i_reg_1145 | tmp_589_not_i_reg_1114);

assign col_assign_2_fu_656_p2 = ($signed(tmp_57_i_reg_1018) - $signed(x_reg_1155));

assign col_assign_cast_i_fu_653_p1 = x_reg_1155;

assign col_buf_0_val_0_0_fu_691_p3 = ((brmerge_i_reg_1161_pp0_iter4_reg[0:0] === 1'b1) ? k_buf_0_val_3_load_reg_1193 : tmp_95_fu_680_p5);

assign col_buf_0_val_1_0_fu_708_p3 = ((brmerge_i_reg_1161_pp0_iter4_reg[0:0] === 1'b1) ? k_buf_0_val_4_load_reg_1199 : tmp_96_fu_697_p5);

assign col_buf_0_val_2_0_fu_725_p3 = ((brmerge_i_reg_1161_pp0_iter4_reg[0:0] === 1'b1) ? k_buf_0_val_5_load_reg_1205 : tmp_97_fu_714_p5);

assign exitcond388_i_i_i_fu_568_p2 = ((t_V_8_reg_270 == tmp_i_reg_1008) ? 1'b1 : 1'b0);

assign exitcond389_i_i_i_fu_330_p2 = ((t_V_reg_259 == tmp_56_i_reg_1013) ? 1'b1 : 1'b0);

assign extLd20_cast30_i_fu_292_p1 = p_src_cols_V_dout;

assign extLd_cast31_i_fu_288_p1 = p_src_rows_V_dout;

assign i_V_fu_335_p2 = (t_V_reg_259 + 17'd1);

assign icmp3_fu_589_p2 = ((tmp_135_fu_579_p4 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_fu_356_p2 = ((tmp_126_fu_346_p4 != 16'd0) ? 1'b1 : 1'b0);

assign j_V_fu_573_p2 = (t_V_8_reg_270 + 17'd1);

assign k_buf_0_val_3_address0 = tmp_604_i_fu_660_p1;

assign k_buf_0_val_4_address0 = tmp_604_i_fu_660_p1;

assign k_buf_0_val_5_address0 = tmp_604_i_fu_660_p1;

assign or_cond_i425_i_i_i_fu_623_p2 = (tmp_61_i_reg_1145 & rev9_fu_617_p2);

assign or_cond_i_i_i_1_i_fu_422_p2 = (tmp_646_1_i_fu_418_p2 & rev7_fu_412_p2);

assign or_cond_i_i_i_2_i_fu_452_p2 = (tmp_646_2_i_fu_448_p2 & rev8_fu_442_p2);

assign or_cond_i_i_i_fu_601_p2 = (icmp_reg_1051 & icmp3_fu_589_p2);

assign or_cond_i_i_i_i_fu_533_p2 = (tmp_646_i_reg_1099 & rev_fu_527_p2);

assign p_assign_17_1_i_fu_389_p2 = ($signed(17'd131070) + $signed(t_V_reg_259));

assign p_assign_17_2_i_fu_395_p2 = ($signed(17'd131069) + $signed(t_V_reg_259));

assign p_assign_18_i_fu_545_p3 = ((tmp_128_fu_538_p3[0:0] === 1'b1) ? 17'd0 : p_neg393_i_i_i_reg_1024);

assign p_assign_2_fu_635_p3 = ((tmp_137_fu_628_p3[0:0] === 1'b1) ? 17'd0 : tmp_57_i_reg_1018);

assign p_dst_data_stream_V_din = ((tmp_665_2_2_i_reg_1302[0:0] === 1'b1) ? src_kernel_win_0_va_40_reg_1234_pp0_iter10_reg : temp_0_i_i_i_059_i_2_reg_1297);

assign p_neg393_i_i_i_fu_318_p2 = ($signed(17'd131071) + $signed(extLd_cast31_i_fu_288_p1));

assign rev7_fu_412_p2 = (tmp_130_fu_405_p3 ^ 1'd1);

assign rev8_fu_442_p2 = (tmp_132_fu_435_p3 ^ 1'd1);

assign rev9_fu_617_p2 = (tmp_136_fu_610_p3 ^ 1'd1);

assign rev_fu_527_p2 = (tmp_127_fu_520_p3 ^ 1'd1);

assign row_assign_18_1_t_i_fu_485_p2 = (tmp_reg_1030 - tmp_91_fu_477_p3);

assign row_assign_18_2_t_i_fu_510_p2 = (tmp_reg_1030 - tmp_94_fu_502_p3);

assign row_assign_18_i_fu_559_p2 = (p_neg393_i_i_i_reg_1024 - y_3_i_fu_552_p3);

assign src_kernel_win_0_va_40_fu_754_p3 = ((tmp_641_i_reg_1064[0:0] === 1'b1) ? tmp_98_fu_746_p5 : col_buf_0_val_0_0_reg_1210);

assign src_kernel_win_0_va_41_fu_768_p3 = ((tmp_641_i_reg_1064[0:0] === 1'b1) ? tmp_99_fu_760_p5 : col_buf_0_val_1_0_reg_1218);

assign src_kernel_win_0_va_42_fu_782_p3 = ((tmp_641_i_reg_1064[0:0] === 1'b1) ? tmp_100_fu_774_p5 : col_buf_0_val_2_0_reg_1226);

assign temp_0_i_i_i_059_i_1_fu_896_p3 = ((tmp_665_2_i_fu_890_p2[0:0] === 1'b1) ? src_kernel_win_0_va_35_fu_142 : temp_0_i_i_i_059_i_3_fu_885_p3);

assign temp_0_i_i_i_059_i_2_fu_920_p3 = ((tmp_665_2_1_i_fu_916_p2[0:0] === 1'b1) ? src_kernel_win_0_va_43_reg_1285 : temp_0_i_i_i_059_i_1_reg_1291);

assign temp_0_i_i_i_059_i_3_fu_885_p3 = ((tmp_665_1_2_i_reg_1280[0:0] === 1'b1) ? src_kernel_win_0_va_41_reg_1241_pp0_iter8_reg : temp_0_i_i_i_059_i_9_reg_1275);

assign temp_0_i_i_i_059_i_7_fu_833_p3 = ((tmp_665_0_2_i_reg_1258[0:0] === 1'b1) ? src_kernel_win_0_va_42_reg_1248 : temp_0_i_i_i_059_i_s_reg_1253);

assign temp_0_i_i_i_059_i_8_fu_844_p3 = ((tmp_665_1_i_fu_838_p2[0:0] === 1'b1) ? src_kernel_win_0_va_37_fu_150 : temp_0_i_i_i_059_i_7_fu_833_p3);

assign temp_0_i_i_i_059_i_9_fu_868_p3 = ((tmp_665_1_1_i_fu_864_p2[0:0] === 1'b1) ? src_kernel_win_0_va_45_reg_1263 : temp_0_i_i_i_059_i_8_reg_1269);

assign temp_0_i_i_i_059_i_s_fu_800_p3 = ((tmp_665_0_1_i_fu_794_p2[0:0] === 1'b1) ? src_kernel_win_0_va_38_fu_154 : src_kernel_win_0_va_39_fu_158);

assign tmp_125_fu_314_p1 = p_src_rows_V_dout[1:0];

assign tmp_126_fu_346_p4 = {{t_V_reg_259[16:1]}};

assign tmp_127_fu_520_p3 = tmp_644_i_reg_1071[32'd16];

assign tmp_128_fu_538_p3 = tmp_644_i_reg_1071[32'd16];

assign tmp_129_fu_385_p1 = t_V_reg_259[1:0];

assign tmp_130_fu_405_p3 = p_assign_17_1_i_reg_1085[32'd16];

assign tmp_131_fu_428_p3 = p_assign_17_1_i_reg_1085[32'd16];

assign tmp_132_fu_435_p3 = p_assign_17_2_i_reg_1092[32'd16];

assign tmp_133_fu_458_p3 = p_assign_17_2_i_reg_1092[32'd16];

assign tmp_134_fu_564_p1 = row_assign_18_i_fu_559_p2[1:0];

assign tmp_135_fu_579_p4 = {{t_V_8_reg_270[16:1]}};

assign tmp_136_fu_610_p3 = ImagLoc_x_reg_1133_pp0_iter1_reg[32'd16];

assign tmp_137_fu_628_p3 = ImagLoc_x_reg_1133_pp0_iter1_reg[32'd16];

assign tmp_138_fu_667_p1 = col_assign_2_fu_656_p2[1:0];

assign tmp_56_i_fu_302_p2 = (17'd2 + extLd_cast31_i_fu_288_p1);

assign tmp_57_i_fu_308_p2 = ($signed(17'd131071) + $signed(extLd20_cast30_i_fu_292_p1));

assign tmp_589_not_i_fu_515_p2 = (tmp_58_i_reg_1046 ^ 1'd1);

assign tmp_58_i_fu_341_p2 = ((t_V_reg_259 < extLd_cast31_i_reg_994) ? 1'b1 : 1'b0);

assign tmp_604_i_fu_660_p1 = $unsigned(col_assign_cast_i_fu_653_p1);

assign tmp_619_2_i_fu_368_p2 = ((t_V_reg_259 == 17'd1) ? 1'b1 : 1'b0);

assign tmp_619_i_fu_362_p2 = ((t_V_reg_259 == 17'd0) ? 1'b1 : 1'b0);

assign tmp_61_i_fu_606_p2 = (($signed(ImagLoc_x_reg_1133) < $signed(extLd20_cast30_i_reg_1003)) ? 1'b1 : 1'b0);

assign tmp_641_i_fu_374_p2 = ((t_V_reg_259 > extLd_cast31_i_reg_994) ? 1'b1 : 1'b0);

assign tmp_644_i_fu_379_p2 = ($signed(17'd131071) + $signed(t_V_reg_259));

assign tmp_646_1_i_fu_418_p2 = (($signed(p_assign_17_1_i_reg_1085) < $signed(extLd_cast31_i_reg_994)) ? 1'b1 : 1'b0);

assign tmp_646_2_i_fu_448_p2 = (($signed(p_assign_17_2_i_reg_1092) < $signed(extLd_cast31_i_reg_994)) ? 1'b1 : 1'b0);

assign tmp_646_i_fu_401_p2 = (($signed(tmp_644_i_reg_1071) < $signed(extLd_cast31_i_reg_994)) ? 1'b1 : 1'b0);

assign tmp_665_0_1_i_fu_794_p2 = ((src_kernel_win_0_va_38_fu_154 > src_kernel_win_0_va_39_fu_158) ? 1'b1 : 1'b0);

assign tmp_665_0_2_i_fu_808_p2 = ((src_kernel_win_0_va_42_fu_782_p3 > temp_0_i_i_i_059_i_s_fu_800_p3) ? 1'b1 : 1'b0);

assign tmp_665_1_1_i_fu_864_p2 = ((src_kernel_win_0_va_45_reg_1263 > temp_0_i_i_i_059_i_8_reg_1269) ? 1'b1 : 1'b0);

assign tmp_665_1_2_i_fu_874_p2 = ((src_kernel_win_0_va_41_reg_1241_pp0_iter7_reg > temp_0_i_i_i_059_i_9_fu_868_p3) ? 1'b1 : 1'b0);

assign tmp_665_1_i_fu_838_p2 = ((src_kernel_win_0_va_37_fu_150 > temp_0_i_i_i_059_i_7_fu_833_p3) ? 1'b1 : 1'b0);

assign tmp_665_2_1_i_fu_916_p2 = ((src_kernel_win_0_va_43_reg_1285 > temp_0_i_i_i_059_i_1_reg_1291) ? 1'b1 : 1'b0);

assign tmp_665_2_2_i_fu_926_p2 = ((src_kernel_win_0_va_40_reg_1234_pp0_iter9_reg > temp_0_i_i_i_059_i_2_fu_920_p3) ? 1'b1 : 1'b0);

assign tmp_665_2_i_fu_890_p2 = ((src_kernel_win_0_va_35_fu_142 > temp_0_i_i_i_059_i_3_fu_885_p3) ? 1'b1 : 1'b0);

assign tmp_90_fu_470_p3 = ((tmp_131_fu_428_p3[0:0] === 1'b1) ? 2'd0 : tmp_reg_1030);

assign tmp_91_fu_477_p3 = ((or_cond_i_i_i_1_i_fu_422_p2[0:0] === 1'b1) ? tmp_s_fu_465_p2 : tmp_90_fu_470_p3);

assign tmp_92_fu_490_p2 = (2'd1 + tmp_129_reg_1079);

assign tmp_93_fu_495_p3 = ((tmp_133_fu_458_p3[0:0] === 1'b1) ? 2'd0 : tmp_reg_1030);

assign tmp_94_fu_502_p3 = ((or_cond_i_i_i_2_i_fu_452_p2[0:0] === 1'b1) ? tmp_92_fu_490_p2 : tmp_93_fu_495_p3);

assign tmp_fu_324_p2 = ($signed(2'd3) + $signed(tmp_125_fu_314_p1));

assign tmp_i_fu_296_p2 = (17'd2 + extLd20_cast30_i_fu_292_p1);

assign tmp_s_fu_465_p2 = (tmp_129_reg_1079 ^ 2'd2);

assign x_fu_642_p3 = ((or_cond_i425_i_i_i_fu_623_p2[0:0] === 1'b1) ? ImagLoc_x_reg_1133_pp0_iter1_reg : p_assign_2_fu_635_p3);

assign y_3_i_fu_552_p3 = ((or_cond_i_i_i_i_fu_533_p2[0:0] === 1'b1) ? tmp_644_i_reg_1071 : p_assign_18_i_fu_545_p3);

always @ (posedge ap_clk) begin
    extLd_cast31_i_reg_994[16] <= 1'b0;
    extLd20_cast30_i_reg_1003[16] <= 1'b0;
end

endmodule //Dilate229
